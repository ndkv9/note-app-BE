{"version":3,"sources":["components/Note.js","components/Noti.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportant","label","important","className","content","onClick","Noti","message","Footer","style","color","fontStyle","fontSize","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","btnText","setBtnText","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","n","map","find","changedNote","returnedNote","catch","error","setTimeout","onSubmit","e","preventDefault","noteObj","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"wLAUeA,EAVF,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,gBACfC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACC,qBAAIC,UAAU,OAAd,UACEJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAmCC,QCEvBK,EAPF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,OAAgB,OAAZA,EACI,KAED,qBAAKJ,UAAU,QAAf,SAAwBI,KCWjBC,EAfA,WAOd,OACC,sBAAKC,MAPc,CACnBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACC,uBACA,iE,gBCTGC,EAAU,kCAiBD,EAfA,WAEd,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa3B,EAVA,SAAAC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ3B,EALA,SAACG,EAAIF,GAEnB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCsE3BK,EA/EH,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAEaF,mBAAS,IAFtB,mBAEVG,EAFU,KAEDC,EAFC,OAGaJ,oBAAS,GAHtB,mBAGVK,EAHU,KAGDC,EAHC,OAIaN,mBAAS,kBAJtB,mBAIVO,EAJU,KAIDC,EAJC,OAKuBR,mBAAS,MALhC,mBAKVS,EALU,KAKIC,EALJ,KAOjBC,qBAAU,WACTC,IAAqBpB,MAAK,SAAAqB,GAAY,OAAIX,EAASW,QACjD,IAEH,IAuBMC,EAAcT,EAAUJ,EAAQA,EAAMc,QAAO,SAAAC,GAAC,OAAIA,EAAEtC,aAsB1D,OACC,gCACC,uCACA,cAAC,EAAD,CAAMK,QAAS0B,IACf,6BACEK,EAAYG,KAAI,SAAA1C,GAAI,OACpB,cAAC,EAAD,CAECA,KAAMA,EACNC,gBAAiB,kBA7BE,SAAAqB,GACvB,IAAMtB,EAAO0B,EAAMiB,MAAK,SAAAF,GAAC,OAAIA,EAAEnB,KAAOA,KAChCsB,EAAW,2BAAQ5C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDkC,EACSf,EAAIsB,GACX3B,MAAK,SAAA4B,GACLlB,EAASD,EAAMgB,KAAI,SAAA1C,GAAI,OAAKA,EAAKsB,KAAOA,EAAKtB,EAAO6C,SAEpDC,OAAM,SAAAC,GACNZ,EAAgB,SAAD,OACLnC,EAAKK,QADA,sCAGf2C,YAAW,WACVb,EAAgB,QACd,KACHR,EAASD,EAAMc,QAAO,SAAAC,GAAC,OAAIA,EAAEnB,KAAOA,SAaXrB,CAAgBD,EAAKsB,MAFvCtB,EAAKsB,SAMb,wBAAQhB,QAxCe,WACxByB,GAAYD,GACFG,EAAVH,EAAqB,WAAyB,mBAsC7C,SAAoCE,IACpC,uBAAMiB,SA3DQ,SAAAC,GACfA,EAAEC,iBACF,IAAMC,EAAU,CACf/C,QAASuB,EACTyB,MAAM,IAAIC,MAAOC,cACjBpD,UAAWqD,KAAKC,SAAW,IAG5BpB,EAAmBe,GAASnC,MAAK,SAAA4B,GAChClB,EAASD,EAAMgC,OAAOb,IACtBhB,EAAW,QAiDX,UACC,uBAAO8B,MAAO/B,EAASgC,SA9CD,SAAAV,GACxBrB,EAAWqB,EAAEW,OAAOF,UA8ClB,wBAAQG,KAAK,SAAb,qBAED,cAAC,EAAD,Q,MC5EHC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.873cca6c.chunk.js","sourcesContent":["const Note = ({ note, toggleImportant }) => {\r\n\tconst label = note.important ? 'make not important' : 'make important'\r\n\treturn (\r\n\t\t<li className='note'>\r\n\t\t\t{note.content}\r\n\t\t\t<button onClick={toggleImportant}>{label}</button>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default Note\r\n","const Noti = ({ message }) => {\r\n\tif (message === null) {\r\n\t\treturn null\r\n\t}\r\n\treturn <div className='error'>{message}</div>\r\n}\r\n\r\nexport default Noti\r\n","const Footer = () => {\r\n\tconst footerStyle = {\r\n\t\tcolor: 'green',\r\n\t\tfontStyle: 'italic',\r\n\t\tfontSize: 16,\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div style={footerStyle}>\r\n\t\t\t<br />\r\n\t\t\t<em>Note App, by Erik Vu Nguyen</em>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Footer\r\n","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/notes'\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n\tconst request = axios.post(baseUrl, newObject)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n\tgetAll,\r\n\tcreate,\r\n\tupdate,\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport Noti from './components/Noti'\r\nimport Footer from './components/Footer'\r\nimport noteService from './services/notes'\r\n\r\nconst App = () => {\r\n\tconst [notes, setNotes] = useState([])\r\n\tconst [newNote, setNewNote] = useState('')\r\n\tconst [showAll, setShowAll] = useState(true)\r\n\tconst [btnText, setBtnText] = useState('show important')\r\n\tconst [errorMessage, setErrorMessage] = useState(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tnoteService.getAll().then(initialNotes => setNotes(initialNotes))\r\n\t}, [])\r\n\r\n\tconst addNote = e => {\r\n\t\te.preventDefault()\r\n\t\tconst noteObj = {\r\n\t\t\tcontent: newNote,\r\n\t\t\tdate: new Date().toISOString(),\r\n\t\t\timportant: Math.random() < 0.5,\r\n\t\t}\r\n\r\n\t\tnoteService.create(noteObj).then(returnedNote => {\r\n\t\t\tsetNotes(notes.concat(returnedNote))\r\n\t\t\tsetNewNote('')\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleNoteChange = e => {\r\n\t\tsetNewNote(e.target.value)\r\n\t}\r\n\r\n\tconst handleImportance = () => {\r\n\t\tsetShowAll(!showAll)\r\n\t\tshowAll ? setBtnText('show all') : setBtnText('show important')\r\n\t}\r\n\r\n\tconst notesToShow = showAll ? notes : notes.filter(n => n.important)\r\n\r\n\tconst toggleImportant = id => {\r\n\t\tconst note = notes.find(n => n.id === id)\r\n\t\tconst changedNote = { ...note, important: !note.important }\r\n\r\n\t\tnoteService\r\n\t\t\t.update(id, changedNote)\r\n\t\t\t.then(returnedNote => {\r\n\t\t\t\tsetNotes(notes.map(note => (note.id !== id ? note : returnedNote)))\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tsetErrorMessage(\r\n\t\t\t\t\t`Note '${note.content}' was already removed from server`\r\n\t\t\t\t)\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetErrorMessage(null)\r\n\t\t\t\t}, 3000)\r\n\t\t\t\tsetNotes(notes.filter(n => n.id !== id))\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Notes</h1>\r\n\t\t\t<Noti message={errorMessage} />\r\n\t\t\t<ul>\r\n\t\t\t\t{notesToShow.map(note => (\r\n\t\t\t\t\t<Note\r\n\t\t\t\t\t\tkey={note.id}\r\n\t\t\t\t\t\tnote={note}\r\n\t\t\t\t\t\ttoggleImportant={() => toggleImportant(note.id)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t\t<button onClick={handleImportance}>{btnText}</button>\r\n\t\t\t<form onSubmit={addNote}>\r\n\t\t\t\t<input value={newNote} onChange={handleNoteChange} />\r\n\t\t\t\t<button type='submit'>save</button>\r\n\t\t\t</form>\r\n\t\t\t<Footer />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}